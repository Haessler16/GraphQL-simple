#  ENUMS
enum Level {
	principiante
	intermedio
	avanzado
}

# UNIONS
union GlobalSearch = Course | Student | Monitor

# INTERFACES
interface Person {
	_id: ID!
	name: String!
	email: String!
}

# CUSTOMS TYPES
type Student implements Person {
	_id: ID!
	name: String!
	email: String!
	avatar: String
}

type Monitor implements Person {
	_id: ID!
	name: String!
	email: String!
	phone: String
}

type Course {
	_id: ID!
	name: String!
	user: String!
	account: ID @deprecated
	people: [Student]
	level: Level
	# description: String!,
	# topic: String
}

# QUERY
type Query {
	"Devuelve todos los cursos"
	courses: [Course]
	"Devuelve solo un curso"
	course(id: ID!): Course
	"Devuelve todos los estudiantes"
	people: [Person]
	"Devuelve solo un estudiante"
	person(id: ID!): Person
	"Ejecuta una busqueda global"
	searchItems(keyword: String!): [GlobalSearch]
}

# INPUTS
input CourseInput {
	name: String!
	user: String!
	account: ID
	level: Level!
}

input CourseUpdateInput {
	name: String
}

input PersonInput {
	name: String!
	email: String!
	phone: String
	avatar: String
}

input PersonUpdateInput {
	name: String
	email: String
	phone: String
	avatar: String
}

# MUTATION
type Mutation {
	"Crear un Curso"
	createCourse(input: CourseInput!): Course
	"Edita un Curso"
	updateCourse(id: ID!, input: CourseUpdateInput!): Course
	"Crear un Estudiante"
	createPerson(input: PersonInput!): Person
	"Edita un Estudiante"
	updatePerson(id: ID!, input: PersonUpdateInput!): Person
	"Eliminar un Estudiante"
	deletePerson(id: ID!): Person
	"Agrega un persona a un curso"
	addPeople(courseID: ID!, personID: ID!): Course
}
